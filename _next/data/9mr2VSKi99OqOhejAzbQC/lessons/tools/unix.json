{"pageProps":{"post":{"attributes":{"title":"Unix Tools!","description":"unix tools"},"html":"<h2>Unix Tools</h2>\n<p>The unix set is super useful to know and we can do quite a bit of useful\ntransformation with them.</p>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n<h2>lets transform out! (the json file)</h2>\n<p><code>sed</code> is a fun tool</p>\n<ul>\n<li>lets replace <code>foo</code> with <code>bar</code></li>\n<li>lets replace <code>foo</code> or <code>bar</code> with <code>foo,foo</code> or <code>bar,bar</code></li>\n<li>show how its like vim find / replace</li>\n</ul>\n<pre><code class=\"hljs language-bash\">➜  dev-prod-2 git:(main) <span class=\"hljs-built_in\">cat</span> out | sed <span class=\"hljs-string\">&#x27;s/: &quot;\\(.*\\)&quot;,/: &quot;\\1,\\1&quot;,/&#x27;</span>\n</code></pre><h3>Expected</h3>\n<pre><code class=\"hljs language-bash\">{<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;foo,foo&quot;</span>, <span class=\"hljs-string\">&quot;values&quot;</span>: [1, 2, 3, 4, 5]}\n{<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;foo,foo&quot;</span>, <span class=\"hljs-string\">&quot;values&quot;</span>: [69, 420, 42, 69420]}\n{<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;bar,bar&quot;</span>, <span class=\"hljs-string\">&quot;values&quot;</span>: {<span class=\"hljs-string\">&quot;a&quot;</span>: 42, <span class=\"hljs-string\">&quot;b&quot;</span>: 69}}\n{<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;bar,bar&quot;</span>, <span class=\"hljs-string\">&quot;values&quot;</span>: {<span class=\"hljs-string\">&quot;a&quot;</span>: 1337, <span class=\"hljs-string\">&quot;b&quot;</span>: 420}}\n{<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;bar,bar&quot;</span>, <span class=\"hljs-string\">&quot;values&quot;</span>: {<span class=\"hljs-string\">&quot;a&quot;</span>: 111, <span class=\"hljs-string\">&quot;b&quot;</span>: 222}}\n</code></pre><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n<h2>find</h2>\n<p>list out files and do stuff</p>\n<pre><code class=\"hljs language-bash\">➜  dev-prod-2 git:(main) ✗ find . -maxdepth 1 -mindepth 1 -<span class=\"hljs-built_in\">type</span> f -<span class=\"hljs-built_in\">exec</span> grep -Hn <span class=\"hljs-string\">&quot;foo&quot;</span> {} \\;\n./out:1:{<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;foo&quot;</span>, <span class=\"hljs-string\">&quot;values&quot;</span>: [1, 2, 3, 4, 5]}\n./out:2:{<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;foo&quot;</span>, <span class=\"hljs-string\">&quot;values&quot;</span>: [69, 420, 42, 69420]}\n</code></pre><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n<h2>xargs</h2>\n<p>a great tool</p>\n<pre><code class=\"hljs language-bash\">➜  dev-prod-2 git:(main) ✗ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;1\\n2\\n3&quot;</span> | xargs -I {} curl https://{}.com\ncurl: (6) Could not resolve host: 1.com\ncurl: (6) Could not resolve host: 2.com\ncurl: (6) Could not resolve host: 3.com\n</code></pre><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n<h2>parallel</h2>\n<p>such a great tool</p>\n<p>lets write a file with the entries of 1 through 9, per line</p>\n<pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre><p>now lets use parallel to control how fast it requests</p>\n<pre><code class=\"hljs language-bash\">➜  dev-prod-2 git:(main) ✗ <span class=\"hljs-built_in\">cat</span> count | parallel -j 5 <span class=\"hljs-string\">&quot;curl https://{}.com&quot;</span>\n</code></pre><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n<h2>Just a touch of awk</h2>\n<p>I don&#39;t know a lot of awk and you can do quite a bit, but the little i do know\nis really good</p>\n<pre><code class=\"hljs language-bash\">➜  dev-prod-2 git:(main) ✗ ps aux | grep vim | awk <span class=\"hljs-string\">&#x27;{ sum += $2 } END { print sum }&#x27;</span>\n</code></pre><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n","markdown":"\n## Unix Tools\nThe unix set is super useful to know and we can do quite a bit of useful\ntransformation with them.\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n## lets transform out! (the json file)\n`sed` is a fun tool\n\n* lets replace `foo` with `bar`\n* lets replace `foo` or `bar` with `foo,foo` or `bar,bar`\n* show how its like vim find / replace\n\n```bash\n➜  dev-prod-2 git:(main) cat out | sed 's/: \"\\(.*\\)\",/: \"\\1,\\1\",/'\n```\n\n### Expected\n```bash\n{\"type\": \"foo,foo\", \"values\": [1, 2, 3, 4, 5]}\n{\"type\": \"foo,foo\", \"values\": [69, 420, 42, 69420]}\n{\"type\": \"bar,bar\", \"values\": {\"a\": 42, \"b\": 69}}\n{\"type\": \"bar,bar\", \"values\": {\"a\": 1337, \"b\": 420}}\n{\"type\": \"bar,bar\", \"values\": {\"a\": 111, \"b\": 222}}\n```\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n## find\nlist out files and do stuff\n\n```bash\n➜  dev-prod-2 git:(main) ✗ find . -maxdepth 1 -mindepth 1 -type f -exec grep -Hn \"foo\" {} \\;\n./out:1:{\"type\": \"foo\", \"values\": [1, 2, 3, 4, 5]}\n./out:2:{\"type\": \"foo\", \"values\": [69, 420, 42, 69420]}\n```\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n## xargs\na great tool\n\n```bash\n➜  dev-prod-2 git:(main) ✗ echo \"1\\n2\\n3\" | xargs -I {} curl https://{}.com\ncurl: (6) Could not resolve host: 1.com\ncurl: (6) Could not resolve host: 2.com\ncurl: (6) Could not resolve host: 3.com\n```\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n## parallel\nsuch a great tool\n\nlets write a file with the entries of 1 through 9, per line\n```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n```\n\nnow lets use parallel to control how fast it requests\n\n```bash\n➜  dev-prod-2 git:(main) ✗ cat count | parallel -j 5 \"curl https://{}.com\"\n```\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n## Just a touch of awk\nI don't know a lot of awk and you can do quite a bit, but the little i do know\nis really good\n\n```bash\n➜  dev-prod-2 git:(main) ✗ ps aux | grep vim | awk '{ sum += $2 } END { print sum }'\n```\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n","slug":"unix","title":"Unix Tools!","section":"Tools","icon":"info-circle","filePath":"/home/runner/work/dev-prod-2/dev-prod-2/lessons/04-tools/C-unix.md","nextSlug":"/dev-prod-2/lessons/tools/neovim","prevSlug":"/dev-prod-2/lessons/tools/jq"}},"__N_SSG":true}